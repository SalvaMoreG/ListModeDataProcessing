sources = $(wildcard src/*.cc)
objects = $(subst src/,tmp/,$(patsubst %.cc,%.o,$(sources)))
exec = $(subst src/,bin/,$(subst .cxx,,$(wildcard src/*.cxx)))

outlib = ./lib/libLMDataProcessinglib.a

CC = g++
LOCAL_INC = -Iinclude/

# VIP07, VIP09, VIP04:
ROOTLIBS = $(shell root-config --libs)
ROOTINCDIR = $(shell root-config --incdir)
# VIP06 (ROOT6): (set by envir_VIP06.sh)
#	ROOTLIBS = ${VIP06ROOTLIBS}
#	ROOTINCDIR = ${VIP06ROOTINCDIR}
 
# 
#	CFLAGS = $(LOCAL_INC)  -isystem$(ROOTINCDIR) -I$(VIP_COMMON_LIB_DIR)/include/ -Wl,--no-as-needed
# VIP07:
#	CFLAGS = $(LOCAL_INC)  -isystem$(ROOTINCDIR) -I$(VIP_COMMON_LIB_DIR)/include/ 

# VIP04:
CFLAGS = $(LOCAL_INC)  -isystem$(ROOTINCDIR) -I$(VIP_COMMON_LIB_DIR)/include/ -Wl,--no-as-needed

VIPLIBS = -L$(VIP_COMMON_LIB_DIR)/lib/ -lVIPcommonlib

all: $(objects) $(exec) $(outlib)
	@echo all done!

$(objects): tmp/%.o: src/%.cc  
	@echo compiling $@
	@$(CC) -c $(CFLAGS) $< -o $@

# 
#	@$(CC) $(CFLAGS) $< $(objects)  -o $@ $(ROOTLIBS) $(VIPLIBS) $(CLHEPLIBS)
#
$(exec): bin/% : src/%.cxx $(objects)
	@echo compiling $@
	@$(CC) $(CFLAGS) $< $(objects)  -o $@ $(ROOTLIBS) $(VIPLIBS) 
	@echo $(@F) compiled.

libobj = tmp/MyGmSDTTree.o

$(outlib): $(libobj)
	ar rcs $(outlib) $(libobj)
	ranlib $(outlib)
	ar tv $(outlib)

$(notdir $(exec)): % : bin/%

$(notdir $(objects)):%:tmp/%

tmp/cc_%.d: src/%.cc 
	@$(CC) -MM $(CFLAGS) $< | sed 's:$*\.o[ \:]:tmp/& $@:g' >  $@

tmp/cxx_%.d: src/%.cxx
	@$(CC) -MM $(CFLAGS) $< | sed 's:\.o::g' | sed 's:$*[ \:]:bin/& $@:g'  > $@

-include $(subst src/,tmp/cc_,$(patsubst %.cc,%.d,$(wildcard src/*.cc)))
-include $(subst src/,tmp/cxx_,$(patsubst %.cxx,%.d,$(wildcard src/*.cxx)))

.PHONY: nobin
nobin: $(objects)

.PHONY: bin
bin: $(exec)

.PHONY: cleanemacs
cleanemacs:
	@-rm *~ */*~ &> /dev/null

.PHONY: clean
clean:
	@-rm tmp/*.o tmp/*.d bin/* &> /dev/null

.PHONY: cleanall
cleanall:clean cleanemacs
